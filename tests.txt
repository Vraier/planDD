[x] test all variable and clause orderings (naive encoding)
    [X] clause orders (T1)
    [x] var orders (T2)
    [ ] do the same for reverse orderings (sure?)

[x] test different building strategies (T3)
    [x] build linear
    [x] build layer by layer
    [x] exponential
    [x] bidirectional
    [x] with variable permutation
    [ ] layer perm without reordering
    [ ] tree?

[x] test different encodings (T6)
    [x] naive
    [x] ladder encoding
    [x] direct encoding
    [x] binary (operators, variables, both, excluding) 
    [x] parallel (how?)
    [x] binary parallel
    [ ] fix error with ladder encoding

[x] test force ordering for variables and clauses (T9)
    [x] with random seed and without
[ ] test the influence of dynamic reordering
[x] test the grouping of variables in the order
[x] bottom up clause ordering
[x] combining it with custom order (probably not)


[x] test naive bdd (T4)
    - force var order
    - bottom up clause order
    - dynamic shifting
[x] test naive sdd
    - compiler (dynamic, v-tree search, bottom up clause order)

[x] compare with competitors (T8)
    - incremental or restarting and SDD or BDD
    - symk and kstar without outputting plans
    
[x] topq track (T7)
    - multiple values of q: 1.1, 1.2, 1.3, 1.4
    - restarting approach only

[x] implement proof of concept (T5)
    [x] uniform random plan
    [x] what is the most likely action to end